pool:
  vmImage: 'Ubuntu-20.04'

trigger:
  tags:
    include:
      - '*'
  branches:
    include:
      - refs/heads/*

pr:
  branches:
    include:
      - '*'

variables:
  # Variables imported from brewblox group:
  # DOCKER_USER
  # DOCKER_PASSWORD
  - group: brewblox
  - name: DOCKER_REPO
    value: brewblox/brewblox-ui

steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '14.x'
    displayName: 'Install Node.js'

  - bash: |
      BRANCH=$(echo $(Build.SourceBranch) | grep -oP "^refs/heads/\K.*")
      TAG=$(echo $BRANCH | tr '/' '-' | tr '[:upper:]' '[:lower:]')
      echo "##vso[task.setvariable variable=BRANCH]$BRANCH"
      echo "##vso[task.setvariable variable=TAG]$TAG"
    displayName: Export build variables

  - bash: |
      yarn ci
    displayName: Install

  - bash: |
      yarn build
    displayName: Build
    env:
      NODE_OPTIONS: --max_old_space_size=16384

  - bash: |
      yarn lint
    displayName: Lint

  - bash: |
      yarn test:ci
    displayName: Test

  - bash: |
      docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
      docker buildx create --use
      docker buildx inspect --bootstrap
    displayName: Prepare buildx
    condition: and(succeeded(), variables.BRANCH)

  - bash: echo $(DOCKER_PASSWORD) | docker login -u $(DOCKER_USER) --password-stdin
    displayName: Docker login
    condition: and(succeeded(), variables.BRANCH)

  - bash: cp -rf dist/ docker/
    displayName: Copy files to docker context
    condition: and(succeeded(), variables.BRANCH)

  - bash: >-
      docker buildx build
      --tag $(DOCKER_REPO):$(TAG)
      --push
      --platform linux/amd64,linux/arm/v7,linux/arm64/v8
      docker
    displayName: Build Docker images
    condition: and(succeeded(), variables['BRANCH'])
